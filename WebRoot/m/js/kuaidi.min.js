var cars_around = $('#cars_around'),
	o_from = $('#o_from'),
	o_to = $('#o_to'),
	o_from_lst = $('#o_from_lst'),
	o_to_lst = $('#o_to_lst'),
	add_minus_val = $('#add_minus_val'),
	tip_up = $('.tip_up'),
	driverName = $('#driverName'),
	driverPhone = $('#driverPhone'),
	driverLicense = $('#driverLicense'),
	o_detail_fare = $('#o_detail_fare'),
	o_detail_from = $('#o_detail_from'),
	o_detail_to = $('#o_detail_to'),
	o_detail_date = $('#o_detail_date');
var is_H5_Position = false,
	is_start = false,
	_interval, _interval_msg, _latitude, _longitude, _o_latitude, _o_longitude, pro_total = 180,
	br = false,
	sys_supportTaxi = 0,
	sys_tip = 5,
	sys_tipLimit = 50,
	nativeApi = window['kuaiDiPageAPI'],
	COMMENT_IN_CAR = 1,
	COMMENT_BREAK = 2,
	COMMENT_CONSULT = 3,
	sys_cityName = '*',
	sys_empty_data = false,
	sys_show_tip = true,
	_should_alert = true,
	pro_int, o_status_int;
$(function() {
	setTimeout(function() {
		module.waitNewOrder();
	}, 1);
});
var order = {
	fetch_o_status_int: 6000,
	vertifyTK: function() {
		$.ajax({
			url: fetchUrl('vertifyTK.htm', true),
			type: "get",
			data: {},
			dataType: "JSON",
			cache: false,
			async: false,
			success: function(e) {
				isString(e) ? e = txtToJson(e) : '';
				if (e.token) {
					var token = $('#token').val();
					console.log('*** fetch new token / current token : ' + e.token + ' / ' + token);
					if (token != e.token) {
						$('#token').val(e.token);
						console.log('*** new token is not the same as current token ; current token : ' + $('#token').val());
					}
				}
			}
		});
	},
	o_detail_m: true,
	init_data: function() {
		$('#bar_from, #bar_to, #bar_pmob').show()
		_latitude = undefined;
		_longitude = undefined;
		_o_latitude = undefined;
		_o_longitude = undefined;
		$(o_from).val('');
		$(o_to).val('');
		$('#money').val('');
		$('#o_from_lst').hide();
		$('#o_to_lst').hide();
		sys_empty_data = false;
		$('#from_remove').hide();
		$('#to_remove').hide();
		$('#phone_remove').hide();
	},
	init: function() {
		if (!_latitude || !_longitude) {
			return;
		}
		$.post(fetchUrl("sys/getCityInfo.htm"), {
			'lng': _longitude,
			'lat': _latitude
		}, function(e) {
			isString(e) ? e = txtToJson(e) : '';
			if (e.cityName) {
				console.log('*** getCityInfo : 支持打车；支持小费；小费递增；小费最大值；城市名称 : ' + e.supportTaxi + ';' + e.supportTip + ';' + e.tip + ';' + e.tipLimit + ';' + e.cityName);
				sys_supportTaxi = e.supportTaxi;
				sys_tip = e.tip;
				sys_tipLimit = e.tipLimit;
				sys_cityName = e.cityName;
				if (e.driverNum > 0) {} else {}
				if (e.supportTip == 0) {
					$('#bar_fare').hide();
					$('#add_minus_val').val(0);
					$('#bar_fare').attr('id', 'bar_fare_h');
				} else {
					$('#bar_fare_h').attr('id', 'bar_fare');
					$('#bar_fare').show();
					var _kefu_bar_win_height = storage.get('_kefu_bar_win_height');
					if (_kefu_bar_win_height && _kefu_bar_win_height - 0 > 0) {} else {
						_kefu_bar_win_height = $(window).height();
					}
					$("#kefu_bar").attr("style", "margin-top:" + (_kefu_bar_win_height - $("#info_new_order").offset().top - 60) + "px").show();
				}
				if (sys_supportTaxi == 1) {} else {}
			} else {
				return;
			}
		}, 'json');
	},
	load_module: function(mod_name, f_dri_info) {
		$('.module').hide();
		$('#' + mod_name).show();
		f_dri_info ? $('#dri_info').show() : $('#dri_info').hide();
	},
	get_position: function() {
		order.init_data();
//		var pmob = storage.get('pmob');
//		var pmob_status = storage.get('pmob_status');
//		console.log('pmob and pmob_status:' + pmob + ';' + pmob_status);
//		if (pmob && pmob_status && pmob_status == 1) {
//			console.log('***the pmob is stored and reset the pmob!***' + pmob + ';' + pmob_status);
//			var reg = /(\d{3})\d{4}(\d{4})/;
//			r_pmob = pmob.replace(reg, "$1****$2");
//			$('#pmob').val(pmob);
//			$('#history_lst').show();
//		} else {
//			$('#history_lst').hide();
//		}
//		if ($(o_from).val().length > 0) {
//			console.log('*** default ofrom data: ' + $(o_from).val());
//			return;
//		}
		get_position_loading();
		var orderFrom = getQueryString('orderFrom');
		var orderTo = getQueryString('orderTo');
		var mobile = getQueryString('mobile');
		var longitude = getQueryString('longitude');
		var latitude = getQueryString('latitude');
		var coordinate = getQueryString('coordinate');
		console.log('from url :: orderFrom ; orderTo ; mobile ; latitude ; longitude :: ' + orderFrom + ';' + orderTo + ';' + mobile + ';' + latitude + ';' + longitude);
		orderTo ? $('#o_to').val(orderTo) : '';
		if (mobile) {
			$('#pmob').val(mobile);
			var pmob = storage.get('pmob');
			if (pmob && pmob != mobile) {
				storage.remove('pmob_status');
				$('#history_lst').hide();
			}
		}
		if (longitude && latitude && coordinate && parseFloat(longitude) && parseFloat(latitude)) {
			console.log('*** geo covert - from url :: ' + longitude + ';' + latitude + ';' + coordinate);
			if (coordinate && coordinate.toUpperCase() != 'WGS84') {
				var location = order.geo_onvert(latitude, longitude, coordinate);
				location[0] ? 　latitude = location[0] : '';
				location[1] ? longitude = location[1] : '';
			}
		}
		if (orderFrom && longitude && latitude && parseFloat(longitude) && parseFloat(latitude)) {
			console.log('set latitude;longitude;orderFrom ...');
			_latitude = latitude;
			_longitude = longitude;
			_o_latitude = latitude;
			_o_longitude = longitude;
			$('#o_from').val(orderFrom);
			clearInterval(_interval);
			o_from.removeAttr('disabled');
			o_from.attr('placeholder', '您在哪里');
			order.init();
		} else if (longitude && latitude && parseFloat(longitude) && parseFloat(latitude)) {
			console.log('*** set latitude;longitude from url param : ' + latitude + ';' + longitude);
			_latitude = latitude;
			_longitude = longitude;
			order.init_position(_latitude, _longitude);
		} else {
			if (WebBinder) {
				WebBinder.call('getInitData', function(e) {
					if (isString(e)) {
						e = txtToJson(e);
					}
					if (e.code - 0) {
						order.nativeApiGeo();
					} else {
						e.result.orderFrom ? orderFrom = e.result.orderFrom : '';
						e.result.orderTo ? orderTo = e.result.orderTo : '';
						e.result.mobile ? mobile = e.result.mobile + '' : '';
						e.result.latitude ? latitude = e.result.latitude : '';
						e.result.longitude ? longitude = e.result.longitude : '';
						e.result.coordinate ? coordinate = e.result.coordinate : '';
						console.log('from getInitData :: orderFrom ; orderTo ; mobile ; latitude ; longitude :: ' + orderFrom + ';' + orderTo + ';' + mobile + ';' + latitude + ';' + longitude);
						orderTo ? $('#o_to').val(orderTo) : '';
						if (mobile) {
							$('#pmob').val(mobile);
							var pmob = storage.get('pmob');
							if (pmob && pmob != mobile) {
								storage.remove('pmob_status');
								$('#history_lst').hide();
							}
						}
						if (longitude && latitude && coordinate && parseFloat(longitude) && parseFloat(latitude)) {
							console.log('*** geo covert - from getInitData :: ' + longitude + ';' + latitude + ';' + coordinate);
							if (coordinate && coordinate.toUpperCase() != 'WGS84') {
								var location = order.geo_onvert(latitude, longitude, coordinate);
								location[0] ? 　latitude = location[0] : '';
								location[1] ? longitude = location[1] : '';
							}
						}
						if (orderFrom && longitude && latitude && parseFloat(longitude) && parseFloat(latitude)) {
							console.log('set latitude;longitude;orderFrom ...');
							_latitude = latitude;
							_longitude = longitude;
							_o_latitude = latitude;
							_o_longitude = longitude;
							$('#o_from').val(orderFrom);
							clearInterval(_interval);
							o_from.removeAttr('disabled');
							o_from.attr('placeholder', '您在哪里');
							order.init();
						} else if (longitude && latitude && parseFloat(longitude) && parseFloat(latitude)) {
							console.log('set latitude;longitude...');
							_latitude = latitude;
							_longitude = longitude;
							order.init_position(_latitude, _longitude);
						} else {
							order.nativeApiGeo()
						}
					}
				});
			} else {
				order.nativeApiGeo()
			}
		}
	},
	nativeApiGeo: function() {
		console.log('use native.geolocation...');
		if (WebBinder) {
			WebBinder.call('getLocation', function(e) {
				if (isString(e)) {
					e = txtToJson(e);
				}
				if (e.code - 0) {
					console.log('*** js定位不可用，继续本地浏览器定位败 ***');
					order.navigatorGeo();
				} else {
					if (e.result && e.result.latitude && e.result.longitude) {
						_latitude = e.result.latitude;
						_longitude = e.result.longitude;
						if (e.result.coordinate && e.result.coordinate.toUpperCase() != 'WGS84') {
							var location = order.geo_onvert(_latitude, _longitude, e.result.coordinate);
							location[0] ? 　_latitude = location[0] : '';
							location[1] ? _longitude = location[1] : '';
						}
						order.init_position(_latitude, _longitude);
					} else {
						console.log('*** js定位失败，继续本地浏览器定位败 ***');
						order.navigatorGeo();
					}
				}
			})
		} else {
			console.log('*** js定位不可用，继续本地浏览器定位败 ***');
			order.navigatorGeo();
		}
	},
	navigatorGeo: function() {
		console.log('use navigator.geolocation...');
		navigator.geolocation.getCurrentPosition(function(e) {
			_latitude = e.coords.latitude;
			_longitude = e.coords.longitude;
			order.init_position(_latitude, _longitude);
		}, function(error) {
			console.log('*** 浏览器定位失败 ***');
			order.init_positon_err();
		});
	},
	geo_onvert: function(latitude, longitude, coordinate) {
		console.log('*** geo_onvert :: ' + latitude + ';' + longitude + ';' + coordinate.toUpperCase());
		var location = new Array();
		$.ajax({
			url: fetchUrl('order/geo_convert.htm'),
			type: "POST",
			data: {
				'lat': latitude,
				'lng': longitude,
				'type': coordinate.toUpperCase()
			},
			dataType: "JSON",
			cache: false,
			async: false,
			success: function(e) {
				console.log('*** geo_onvert result :: ' + e);
				isString(e) ? e = txtToJson(e) : '';
				if (e.err_code) {
					console.log('*** geo_onvert failed ***');
				} else {
					if (e.lat && e.lng) {
						location[0] = e.lat;
						location[1] = e.lng;
					}
				}
			},
			error: function() {
				console.log('*** geo_onvert error ***');
			}
		})
		return location;
	},
	init_position: function(_latitude, _longitude) {
		console.log('***获取当前经纬度成功！经纬度为：' + _latitude + ';' + _longitude);
		_o_latitude = _latitude;
		_o_longitude = _longitude;
		storage.set('_latitude', _latitude);
		storage.set('_longitude', _longitude);
		order.init();
		console.log('*** location name search ***');
		$.getJSON('http://restapi.amap.com/v3/geocode/regeo?location=' + _longitude + ',' + _latitude + '&extensions=all&output=json&key=0f190aa16f94b25924efa17c42abaa13&radius=100&coordsys=gps&callback=?', function(data) {
			if (data.status == 1) {
				console.log('JSON.stringify(data) : ' + JSON.stringify(data));
				var first_road = typeof data.regeocode.roadinters[0] == 'undefined' ? '' : data.regeocode.roadinters[0].first_name;
				var roadinters_dis = typeof data.regeocode.roadinters[0] == 'undefined' ? 1000 : data.regeocode.roadinters[0].distance;
				var second_road = typeof data.regeocode.roadinters[0] == 'undefined' ? '' : data.regeocode.roadinters[0].second_name;
				var name = typeof data.regeocode.addressComponent.neighborhood.name == 'undefined' ? '' : data.regeocode.addressComponent.neighborhood.name;
				var addr_cnt = name;
				console.log('first_road;roadinters_dis;second_road;addr_cnt : ' + first_road + ';' + roadinters_dis + ';' + second_road + ';' + addr_cnt);
				if (roadinters_dis <= 100.0) {
					if (addr_cnt.length <= 0) {
						if (typeof data.regeocode.pois[0] != 'undefined') {
							addr_cnt = typeof data.regeocode.pois[0].name == 'undefined' ? '' : data.regeocode.pois[0].name;
							console.log('*** roadinters_dis <= 100.0 -> data.regeocode.pois[0].name : ' + data.regeocode.pois[0].name);
						}
					}
					addr_cnt = first_road + second_road + '口' + addr_cnt;
					if (addr_cnt.length > 16) addr_cnt = first_road + second_road + '口';
				}
				if (roadinters_dis > 100.0 && roadinters_dis <= 200.0) {
					if (addr_cnt.length <= 0) {
						if (typeof data.regeocode.pois[0] != 'undefined') {
							addr_cnt = typeof data.regeocode.pois[0].name == 'undefined' ? '' : data.regeocode.pois[0].name;
							console.log('*** roadinters_dis > 100.0 && roadinters_dis <= 200.0 -> data.regeocode.pois[0].name : ' + data.regeocode.pois[0].name);
						}
					}
					addr_cnt = first_road + addr_cnt;
					if (second_road.length > 0) addr_cnt = addr_cnt + '(近' + second_road + ')';
				}
				if (roadinters_dis > 200.0) {
					var address = '';
					if (addr_cnt.length <= 0) {
						if (typeof data.regeocode.pois[0] != 'undefined') {
							addr_cnt = typeof data.regeocode.pois[0].name == 'undefined' ? '' : data.regeocode.pois[0].name;
							address = typeof data.regeocode.pois[0].address == 'undefined' ? '' : data.regeocode.pois[0].address;
							console.log('*** roadinters_dis > 200.0 -> data.regeocode.pois[0].name : ' + data.regeocode.pois[0].name);
						}
					}
					var street = typeof data.regeocode.addressComponent.streetNumber.street == 'undefined' ? '' : data.regeocode.addressComponent.streetNumber.street;
					var number = typeof data.regeocode.addressComponent.streetNumber.number == 'undefined' ? '' : data.regeocode.addressComponent.streetNumber.number + '';
					console.log('*** street;number : ' + street + ';' + number);
					if (street.length > 0) {
						number.length > 0 ? addr_cnt = street + number + '号' + addr_cnt : addr_cnt = street + addr_cnt;
					} else {
						street = address;
						addr_cnt = street + addr_cnt;
					}
					if (addr_cnt.length <= 0) {
						var district = typeof data.regeocode.addressComponent.district == 'undefined' ? '' : data.regeocode.addressComponent.district;
						var township = typeof data.regeocode.addressComponent.township == 'undefined' ? '' : data.regeocode.addressComponent.township;
						addr_cnt = district + township;
					}
				}
				console.log('*** current location info : ' + addr_cnt);
				clearInterval(_interval);
				o_from.removeAttr('disabled');
				o_from.val(addr_cnt);
				br = true;
				o_from.attr('placeholder', '你在哪里');
			} else {
				order.init_positon_err();
			}
		});
	},
	init_positon_err: function() {
		clearInterval(_interval);
		o_from.removeAttr('disabled');
		o_from.attr('placeholder', '无法获取位置，请搜索');
		console.log('***navigator获取用户当前坐标失败！***');
	},
	o_create: function() {
		var o_from_val = trim($('#o_from').val()),
			o_to_val = trim($('#o_to').val()),
			pmob_val = $('#pmob').val(),
			add_minus_val = $('#add_minus_val').val();
		add_minus_val == 'undefined' ? 0 : add_minus_val;
		console.log('*** create order, order info : ' + $('#o_from').val() + ';' + $('#o_to').val() + ';' + $('#pmob').val() + ';' + $('#add_minus_val').val());
		$.ajax({
			url: fetchUrl('order/create.htm'),
			type: "POST",
			data: {
				'type': 0,
				'from': o_from_val,
				'to': o_to_val,
				'flng': _longitude,
				'flat': _latitude,
				'pmob': pmob_val,
				'bonus': add_minus_val
			},
			dataType: "JSON",
			cache: false,
			async: false,
			success: function(e) {
				if (e == '{"code":9001}') {
					console.log('*** o_create -> 9001 error ***');
					toast('创建订单失败了，请重新发单！');
					module.waitNewOrder();
					return;
				}
				isString(e) ? e = txtToJson(e) : '';
				if (e.err_code) {
					show_error(e.err_code);
					module.waitNewOrder();
					return;
				} else {
					if (e.orderId) {
						if (e.orderId) {
							clearInterval(_interval_msg);
							storage.set('o_id', e.orderId);
							storage.set('pmob', $('#pmob').val());
							storage.set('pmob_status', 1);
							module.waitForCars();
							console.log('*** order created suc! info(o_id;pmob;pmob_status): ' + e.orderId + ';' + $('#pmob').val() + ';' + 1);
							return;
						}
					}
				}
			},
			error: function() {
				console.log('*** create order failed ***');
			}
		})
	},
	o_fetch_status: function(o_id) {
		$.ajax({
			url: fetchUrl('order/query_state.htm'),
			type: "POST",
			data: {
				'orderId': o_id
			},
			dataType: "JSON",
			cache: false,
			success: function(e) {
				console.log('o_fetch_status > e : ' + e);
				isString(e) ? e = txtToJson(e) : '';
				if (e.err_code) {
					if (pro_int) {
						clearInterval(pro_int);
					}
					if (o_status_int) {
						clearInterval(o_status_int);
					}
					show_error(e.err_code);
				} else {
					var driverCount = 20 + Math.round(Math.random() * 100);
					console.log('***driverCount is:' + driverCount);
					changeDriCount(driverCount);
					storage.set('driverCount', driverCount);
					switch (e.orderState) {
						case 2:
							break;
						case 3:
							if (pro_int) {
								clearInterval(pro_int);
							}
							if (o_status_int) {
								clearInterval(o_status_int);
							}
							order.set_dri_info(e.driverName, e.driverPhone, e.driverLicense, e.driverLng, e.driverLat);
							storage.set('dri_info', jsonToTxt(e));
							if (storage.get('current') == 'waitForCharge') {
								module.waitForCharge();
							} else {
								module.waitForDri();
							}
							break;
						case 4:
							break;
					}
				}
			}
		})
	},
	o_cancle: function(o_id, re_create) {
		$.ajax({
			url: fetchUrl('order/cancel.htm'),
			type: "POST",
			data: {
				'orderId': o_id
			},
			dataType: "JSON",
			cache: false,
			async: false,
			success: function(e) {
				isString(e) ? e = txtToJson(e) : '';
				if (e.err_code) {
					clearInterval(pro_int);
					clearInterval(o_status_int);
					show_error(e.err_code);
					return;
				} else {
					clearInterval(pro_int);
					clearInterval(o_status_int);
					if (re_create) {
						$('#pro-now').css('width', '0%');
						$('#pro_note').text('请等待0秒');
						r = confirm('附近暂时没有司机接单，是否重新打车？');
						if (r) {
							storage.set('sys_dri_count', 0);
							driverCount = 0;
							$('#driverCount').text('000');
							console.log('*** o_cancle -> reset the driver count info ***');
							order.o_create();
							return;
						}
					}
					console.log('*** order cancled, wait to new order!***');
					module.waitNewOrder();
				}
			}
		});
	},
	o_comment: function(o_id, pmob, comment) {
		console.log('***用户评论：' + o_id + ';' + pmob + ';' + comment);
		$.ajax({
			url: fetchUrl('order/comment.htm'),
			type: "POST",
			data: {
				'orderId': o_id,
				'pmob': 　pmob,
				'comment': comment
			},
			dataType: "JSON",
			cache: false,
			async: false,
			success: function(e) {
				isString(e) ? e = txtToJson(e) : '';
				if (e.err_code) {
					show_error(e.err_code);
					console.log('***order comment failed!***');
				} else {
					sys_empty_data = true;
					console.log('*** set property as empty data ***:' + sys_empty_data);
					if (comment == COMMENT_IN_CAR) {} else {
						toast('已确认未上车');
					}
				}
			}
		})
	},
	in_car_comment: function() {
		var o_id = storage.get('o_id'),
			pmob = storage.get('pmob'),
			comment = COMMENT_IN_CAR;
		order.o_comment(o_id, pmob, comment);
	},
	o_to_pay: function(o_id, money) {
		$.ajax({
			url: fetchUrl('order/getPay.htm'),
			type: "POST",
			data: {
				'orderId': o_id,
				'money': 　money
			},
			dataType: "JSON",
			cache: false,
			async: false,
			success: function(e) {
				console.log('fetch order payment info suc!<br />' + e);
				isString(e) ? e = txtToJson(e) : '';
				if (e.err_code) {
					show_error(e.err_code);
					return;
				} else {
					var params = {
						orderInfo: e.orderInfo
					};
					if (WebBinder) {
						WebBinder.call('startAliMSPay', params, function(e) {
							if (isString(e)) {
								e = txtToJson(e);
							}
							if (e.code - 0) {
								order.remove_back_notity();
								$('#orderId').val(storage.get('o_id'));
								$('#alipay_form').attr('action', fetchUrl('order/wap_pay.htm'));
								$('#alipay_form').submit();
							} else {
								console.log('***快捷支付返回信息：' + e);
								if ((e.result + '').indexOf("9000") > -1) {
									order.in_car_comment();
									storage.set('o_detail_o_id', o_id);
									storage.set('o_detail_o_status', 1);
									module.chargeDetails(o_id, 1);
								} else {
									console.log('支付宝支付失败，请重试！');
								}
							}
						})
					} else {
						order.remove_back_notity();
						$('#orderId').val(storage.get('o_id'));
						$('#alipay_form').attr('action', fetchUrl('order/wap_pay.htm'));
						$('#alipay_form').submit();
					}
				}
			},
			error: function() {}
		})
	},
	o_pay_cash: function(o_id, pmob, comment) {
		$.ajax({
			url: fetchUrl('order/comment.htm'),
			type: "POST",
			data: {
				'orderId': o_id,
				'pmob': pmob,
				'comment': comment
			},
			dataType: "JSON",
			cache: false,
			async: false,
			success: function(e) {
				isString(e) ? e = txtToJson(e) : '';
				if (e.err_code) {} else {}
			}
		})
	},
	o_details: function(o_id, o_status) {
		$.ajax({
			url: fetchUrl('order/getH5Order.htm'),
			type: "POST",
			data: {
				'orderId': o_id
			},
			dataType: "JSON",
			cache: false,
			success: function(e) {
				if (e && e.length > 0) {
					isString(e) ? e = txtToJson(e) : '';
					order.set_dri_info(e.driverName, e.driverMob, e.carNo, null, null);
					order.set_o_details(e.fare, e.startPosName, e.endPosName, e.createDateStr, o_status);
					order.load_module('chargeDetails', true);
					if (o_status == 0) {
						storage.set('o_id', o_id);
					}
				} else {
					module.waitNewOrder();
				}
			}
		})
	},
	o_details_judge: function(o_id, o_status) {
		var flag = false;
		$.ajax({
			url: fetchUrl('order/getH5Order.htm'),
			type: "POST",
			data: {
				'orderId': o_id
			},
			dataType: "JSON",
			cache: false,
			async: false,
			success: function(e) {
				isString(e) ? e = txtToJson(e) : '';
				if (e.fare > 0) {
					order.in_car_comment();
					order.set_dri_info(e.driverName, e.driverMob, e.carNo, null, null);
					order.set_o_details(e.fare, e.startPosName, e.endPosName, e.createDateStr, o_status);
					storage.set('current', 'chargeDetails');
					storage.set('o_detail_o_id', o_id);
					storage.set('o_detail_o_status', o_status);
					order.load_module('chargeDetails', true);
					if (o_status == 0) {
						storage.set('o_id', o_id);
					}
					flag = true;
				} else {}
			}
		})
		return flag;
	},
	o_wait_cars: function(c, o_id) {
		var width = 100,
			count = 0,
			inter = 100 / c;
		console.log('*** c;o_id;inter:' + c + ';' + o_id + ';' + inter);
		var tip_width = storage.get('tip_width'),
			tip_count = storage.get('tip_count');
		if (tip_width && tip_count) {
			width = tip_width;
			count = c - tip_count;
			if (count == c) {
				width = 100;
				count = 0;
				storage.set('tip_width', width);
				storage.set('tip_count', count);
			}
			console.log('*** woll!!! reset pro data : width&count: ' + width + ';' + count);
		}
		pro_int = setInterval(function() {
			count++;
			if (count > c) {
				clearInterval(pro_int);
				order.o_cancle(o_id, true);
				count = c;
				return;
			}
			width = width - inter;
			$('#pro-now').css('width', width + '%');
			$('#pro_note').text('请等待' + (c - count) + '秒');
			storage.set('tip_width', width);
			storage.set('tip_count', c - count);
			if (count >= c) {
				console.log('***clear interval of o_wait_cars***');
				storage.set('sys_dri_count', 0);
				driverCount = 0;
				storage.set('driverCount', driverCount);
				$('#pro_note').text('请等待0秒');
				$('#driverCount').text('000');
				$('#btns_o_cancle').hide();
				hide_shade();
			}
		}, 1000);
	},
	set_dri_info: function(driverName, driverPhone, driverLicense, driverLng, driverLat) {
		console.log('***set_dri_info -> driver info : ' + driverName + ';' + driverPhone + ';' + driverLicense);
		$('#driverLicense').html(driverLicense + '&nbsp;&nbsp;&nbsp;' + driverName.substr(0, 1) + '师傅');
		$('#driverPhone').attr('href', 'tel:' + driverPhone);
	},
	set_o_details: function(fare, from, to, date, status) {
		if (fare > 0) {
			console.log('***the fare of order details is 1 ***');
			$('#o_detail_fare_bar').show();
		} else {
			$('#o_detail_fare_bar').hide();
		}
		console.log('***set_o_details -> order details info : ' + fare + ';' + from + ';' + to + ';' + date + ';' + status);
		console.log('***set_o_details -> order fare info : ' + fare);
		$(o_detail_fare).html(fare + '元');
		$(o_detail_from).text(from);
		$(o_detail_to).text(to);
		$(o_detail_date).text(date);
		$('.o_details_status').hide();
		$('.o_detail_btns').hide()
		console.log('***set_o_details.order status is:' + status);
		if (status == 0) {
			$('#o_detail_unknow').show();
			$('#o_detail_btn_unfinish').show()
		} else if (status == 1) {
			$('#o_detail_suc').show();
			if (getQueryString('is_o_detail') == null) {
				$('#o_detail_btn_finish').show();
			} else {
				$('#be_bottom').show();
			}
		} else if (status == 2) {
			$('#o_detail_fail').show();
			if (getQueryString('is_o_detail') == null) {
				$('#o_detail_btn_finish').show();
			} else {
				$('#be_bottom').show();
			}
		} else {
			$('#o_detail_btns').hide();
			if (getQueryString('is_o_detail') == null) {
				$('#be_bottom').show();
			} else {
				$('#be_bottom').show();
			}
		}
	},
	c_send_msg: function(pmob) {
		$.post(fetchUrl("getSmsVerifyCode.htm"), {
			'mob': pmob
		}, function(e) {
			isString(e) ? e = txtToJson(e) : '';
			if (e.code - 0 == -2) {
				toast(e.msg);
				console.log('*** c_send_msg error info : ' + e.msg);
			} else {
				setTimeout(order.load_module('confirmPhone', false), 1000);
				console.log('*** c_send_msg info : e.code: ' + e.code);
				resend_cfm_msg_loading();
			}
		}, 'json');
	},
	c_confirm_code: function(pmob, vrf_code) {
		$.ajax({
			url: fetchUrl('checkSmsVerifyCode.htm'),
			type: "POST",
			data: {
				'mob': pmob,
				'verifyCode': vrf_code
			},
			dataType: "JSON",
			cache: false,
			async: false,
			beforeSend: function() {
				$('#btn_confirm').addClass('disable').attr('disabled', 'disabled');
			},
			complete: function() {
				$('#btn_confirm').removeClass('disable').removeAttr('disabled');
			},
			success: function(e) {
				isString(e) ? e = txtToJson(e) : '';
				if (e.code - 0) {
					alert(e.msg);
					return;
					setDefaultModule();
				} else {
					$('#c_pmob').val('');
					order.o_create();
				}
			}
		})
	},
	init_pro_data: function() {
		var tip_width = storage.get('tip_width'),
			tip_count = storage.get('tip_count'),
			driverCount = storage.get('sys_dri_count');
		if (!tip_width || !tip_count) {
			$('#pro-now').css('width', '100%');
			$('#pro_note').text('请等待' + pro_total + '秒');
			$('#driverCount').text('000');
		} else {
			$('#pro-now').css('width', tip_width + '%');
			$('#pro_note').text('请等待' + tip_count + '秒');
			$('#driverCount').text('000');
			var driverCount_val = '000';
			if (driverCount < 10) {
				driverCount_val = '00' + driverCount;
			} else if (driverCount < 100) {
				driverCount_val = '0' + driverCount;
			} else {
				driverCount_val = driverCount;
			}
			if (driverCount) $('#driverCount').text(driverCount_val);
		}
	},
	set_back_notity: function() {
		if (_should_alert) {
			if (WebBinder) {
				WebBinder.on('backPressed', function(e) {
					isString(e) ? e = txtToJson(e) : '';
					if (e.code - 0) {} else {
						if (e.result - 0 >= 0) {
							if (confirm('您确定要退出吗?')) {
								WebBinder.call('goBack');
							} else {
								console.log('backPressed canceled.');
							}
						}
					}
				});
			} else {}
			if (WebBinder) {
				WebBinder.on('homePressed', function(e) {
					isString(e) ? e = txtToJson(e) : '';
					if (e.code - 0) {} else {
						if (e.result - 0 >= 0) {
							if (confirm('您确定要退出吗?')) {
								WebBinder.call('goHome');
							} else {
								console.log('homePressed canceled.');
							}
						}
					}
				});
			} else {}
			_should_alert = false;
		}
	},
	remove_back_notity: function() {
		if (WebBinder) {
			WebBinder.un('backPressed');
		} else {}
		if (WebBinder) {
			WebBinder.un('homePressed');
		} else {}
		_should_alert = true;
	},
	randomDriNum: function() {
		cars_around.text(20 + Math.round(Math.random() * 100));
	},
	initModuleAble: function() {
		var orderHis = getQueryString('orderHis');
		var order2Pay = getQueryString('order2Pay');
		var home400 = getQueryString('home400');
		console.log('from url param :: orderHis ; order2Pay ; home400 :: ' + orderHis + ';' + order2Pay + ';' + home400);
		if (orderHis && orderHis == 'false') {
			$('#history_lst').remove();
		}
		if (order2Pay && order2Pay == 'false') {
			$('#btnToAlipay').text('已上车');
			$('#alipay_form').hide();
		}
		if (home400 && home400 == 'false') {
			$('#kefu_bar').remove();
		}
		if (getQueryString('is_o_detail') == null) {
			var _arrl_param = new Array();
			getQueryString('longitude') ? _arrl_param.push('longitude=' + getQueryString('longitude')) : '';
			getQueryString('latitude') ? _arrl_param.push('latitude=' + getQueryString('latitude')) : '';
			getQueryString('coordinate') ? _arrl_param.push('coordinate=' + getQueryString('coordinate')) : '';
			getQueryString('orderFrom') ? _arrl_param.push('orderFrom=' + getQueryString('orderFrom')) : '';
			getQueryString('orderTo') ? _arrl_param.push('orderTo=' + getQueryString('orderTo')) : '';
			getQueryString('mobile') ? _arrl_param.push('mobile=' + getQueryString('mobile')) : '';
			getQueryString('orderHis') ? _arrl_param.push('orderHis=' + getQueryString('orderHis')) : '';
			getQueryString('order2Pay') ? _arrl_param.push('order2Pay=' + getQueryString('order2Pay')) : '';
			getQueryString('home400') ? _arrl_param.push('home400=' + getQueryString('home400')) : '';
			getQueryString('titlebar') ? _arrl_param.push('titlebar=' + getQueryString('titlebar')) : '';

		}
		if (WebBinder) {
			WebBinder.call('getInitData', function(e) {
				console.log('*** WebBinder.getInitData ***');
				if (isString(e)) {
					e = txtToJson(e);
				}
				if (e.code - 0) {} else {
					if (e.result.module) {
						e.result.module.orderHis + '' ? orderHis = e.result.module.orderHis + '' : '';
						e.result.module.order2Pay + '' ? order2Pay = e.result.module.order2Pay + '' : '';
						e.result.module.home400 + '' ? home400 = e.result.module.home400 + '' : '';
						console.log('from getInitData :: orderHis ; order2Pay ; home400 :: ' + orderHis + ';' + order2Pay + ';' + home400);
						if (orderHis && orderHis == 'false') {
							$('#history_lst').remove();
						}
						if (order2Pay && order2Pay == 'false') {
							$('#btnToAlipay').text('已上车');
							$('#alipay_form').hide();
						}
						if (home400 && home400 == 'false') {
							$('#kefu_bar').remove();
						}
					}
				}
			});
		} else {}
		document.addEventListener('WeixinJSBridgeReady', function onBridgeReady() {
			WeixinJSBridge.call('hideOptionMenu');
		});
	}
}
var module = {
	waitNewOrder: function() {
		order.load_module('waitNewOrder', false);
		order.randomDriNum();
		setTimeout(function() {
			var _kefu_bar_win_height = $(window).height();
			storage.set('_kefu_bar_win_height', _kefu_bar_win_height);
			$("#kefu_bar").attr("style", "margin-top:" + (_kefu_bar_win_height - $("#info_new_order").offset().top - 60) + "px").show();
		}, 500);
		order.get_position();
		tip_up.live('click', function() {
			$(this).parent().hide();
			$('#bar_to, #bar_pmob').show();
		});
		order.remove_back_notity();
	},
	confirmPhone: function() {
		pmob = $('#pmob').val();
		$('#c_note').text('请输入手机' + pmob + '收到的短信校验码');
		order.c_send_msg(pmob);
		$('#btn_c_resend').click(function() {
			console.log('*** recend message code***:' + pmob);
			order.c_send_msg(pmob);
		});
		order.set_back_notity();
	},
	waitForCars: function() {
		$('#bar_from, #bar_to, #bar_fare').show();
		$('#o_from_lst, #o_to_lst').hide();
		storage.set('current', 'waitForCars');
		$('#btns_o_cancle').hide();
		hide_shade();
		order.init_pro_data();
		order.load_module('waitForCars', false);
		var o_id = storage.get('o_id');
		order.o_wait_cars(pro_total, o_id);
		o_status_int = setInterval(function() {
			order.o_fetch_status(o_id);
		}, order.fetch_o_status_int);
		order.set_back_notity();
	},
	waitForDri: function() {
		storage.set('current', 'waitForDri');
		$('#btnToAlipay').show();
		if ($('#driverLicense').text().length <= 0) {
			var dri_info = storage.get('dri_info');
			if (dri_info) {
				console.log('storage.get(dri_info) : ' + storage.get('dri_info'));
				var e = txtToJson(dri_info);
				if (e) {
					order.set_dri_info(e.driverName, e.driverPhone, e.driverLicense, e.driverLng, e.driverLat);
				}
			} else {
				var o_id = storage.get('o_id');
				order.o_fetch_status(o_id);
			}
		}
		order.load_module('waitForDri', true);
		order.set_back_notity();
	},
	waitForCharge: function() {
		storage.set('current', 'waitForCharge');
		console.log('*** load waitForCharge module ***');
		console.log('*** $(window).height(); $(#btnCallAlipay).offset().top : ' + $(window).height() + ';' + $('#btnCallAlipay').offset().top);
		setTimeout(function() {
			if ($('#btnCallAlipay').offset().top > 0) {
				$('#btnPayByCash').attr('style', 'margin-top:' + ($(window).height() - $('#btnCallAlipay').offset().top - 110) + 'px');
			} else {}
		}, 1);
		var o_id = storage.get('o_id');
		var o_status = 1;
		var flag = order.o_details_judge(o_id, o_status);
		if (flag) {
			return;
		}
		if ($('#driverLicense').text().length <= 0) {
			var dri_info = storage.get('dri_info');
			if (dri_info) {
				console.log('storage.get(dri_info) : ' + storage.get('dri_info'));
				var e = txtToJson(dri_info);
				if (e) {
					order.set_dri_info(e.driverName, e.driverPhone, e.driverLicense, e.driverLng, e.driverLat);
				}
			} else {
				var o_id = storage.get('o_id');
				order.o_fetch_status(o_id);
			}
		}
		order.load_module('waitForCharge', true);
		var o_id = storage.get('o_id'),
			pmob = storage.get('pmob'),
			comment = COMMENT_IN_CAR;
		$('#btnCallAlipay').click(function() {
			var o_id = storage.get('o_id');
			var money = trim($('#money').val());
			var index = money.indexOf(".");
			if (money.length <= 0 || money == '0' || money == '0.0' || money == '0.00' || (index > 0 && money.length == index + 1)) {
				toast('金额输入有误!');
				return;
			}
			var inteval = money;
			if (index > 0) {
				inteval = money.substr(0, index);
			}
			if (inteval.length > 1) {
				var fst_val = inteval.substr(0, 1);
				console.log('*** inteval;fst_val:' + inteval + ';' + fst_val);
				if (fst_val == 0) {
					toast('金额输入有误!');
					return;
				}
			}
			if (WebBinder) {
				WebBinder.call('isAliMSPayExist', function(e) {
					if (isString(e)) {
						e = txtToJson(e);
					}
					if (e.code - 0 || e.result == 'false' || e.result == false) {
						order.remove_back_notity();
						$('#orderId').val(storage.get('o_id'));
						$('#alipay_form').attr('action', fetchUrl('order/wap_pay.htm'));
						$('#alipay_form').submit();
					} else {
						order.o_to_pay(o_id, money);
					}
				})
			} else {
				order.remove_back_notity();
				$('#orderId').val(storage.get('o_id'));
				$('#alipay_form').attr('action', fetchUrl('order/wap_pay.htm'));
				$('#alipay_form').submit();
			}
		});
		order.set_back_notity();
	},
	chargeDetails: function(o_id, o_status) {
		if (!o_id || !o_status) {
			module.waitNewOrder();
		}
		var is_o_detail = getQueryString('is_o_detail') == null;
		if (getQueryString('is_o_detail') == null && storage.get('is_o_history')) {
			storage.remove('is_o_history');
			module.waitNewOrder();
			return;
		}
		storage.set('current', 'chargeDetails');
		order.o_details(o_id, o_status);
		order.remove_back_notity();
	},
	orderHisLst: function() {
		storage.set('current', 'orderHisLst');
		var pmob = storage.get('pmob');
		var pmob_status = storage.get('pmob_status');
		if (pmob && pmob_status && pmob_status == 1) {
			order.load_module('orderHisLst', false);
			order.o_history_lst(pmob, order.page_num, order.page_size);
		}
	}
}
$(function() {
	$('#createOrder').click(function() {
		if (!_latitude || !_longitude) {
			if (!_o_latitude || !_o_longitude) {
				toast('无法获取出发地位置，请搜索');
				return;
			} else {
				_latitude = _o_latitude;
				_longitude = _o_longitude;
				console.log('***出发地坐标已改变，将使用旧的坐标，当前经纬度重置为：' + _latitude + ';' + _longitude);
				storage.set('_latitude', _latitude);
				storage.set('_longitude', _longitude);
			}
		}
		var o_from_val = trim($('#o_from').val()),
			o_to_val = trim($('#o_to').val()),
			pmob_val = $('#pmob').val(),
			add_minus_val = $('#add_minus_val').val();
		if (o_from_val.length <= 0) {
			toast('请先确定您打车的起点');
			return;
		}
		if (o_to_val.length <= 0) {
			toast('请先确定您打车的终点');
			return;
		}
		if (!validate_phone(pmob_val)) {
			toast('请输入正确的手机号码');
			return;
		}
		var pmob = storage.get('pmob');
		var pmob_status = storage.get('pmob_status');
		console.log('***cliked createOrder btn,pmob_status:' + pmob_status);
		if (!pmob || !pmob_status || pmob_status == 0) {
			if (pmob && pmob == $('#pmob').val()) {
				order.o_create();
				return;
			}
			pmob = $('#pmob').val();
			console.log('***click createOrder btn, pmob is:' + pmob);
			module.confirmPhone();
		} else {
			order.o_create();
		}
	});
	$('#btn_confirm').click(function() {
		var pmob = $('#pmob').val();
		var c_pmob = $.trim($('#c_pmob').val());
		if (c_pmob.length <= 0) {
			toast('请先输入您的验证码');
			return;
		}
		order.c_confirm_code(pmob, c_pmob);
	});
	$('#cancle_sure').click(function() {
		var o_id = storage.get('o_id');
		order.o_cancle(o_id, false);
		$('#btns_o_cancle').hide();
		hide_shade();
	});
	$('#btnToAlipay, #btnToAlipay2').click(function() {
		module.waitForCharge();
	});
	$('#btnPayByCash').click(function() {
		if (confirm('选择现金付款后不能再修改支付方式, 请确认')) {
			order.in_car_comment();
			var o_id = storage.get('o_id');
			storage.set('o_detail_o_id', o_id);
			storage.set('o_detail_o_status', 1);
			module.chargeDetails(o_id, 1);
		}
	});
	$('#btnPayByCash2').click(function() {
		var o_id = storage.get('o_id'),
			pmob = storage.get('pmob'),
			comment = COMMENT_IN_CAR;
		order.o_comment(o_id, pmob, comment);
		module.waitNewOrder();
	});
	$('#cmt_break, #cmt_break2').click(function() {
		var o_id = storage.get('o_id'),
			pmob = storage.get('pmob'),
			comment = COMMENT_BREAK;
		order.o_comment(o_id, pmob, comment);
		$('.btns_bottom').hide();
		hide_shade();
		module.waitNewOrder();
	});
	$('#cmt_consult, #cmt_consult2').click(function() {
		var o_id = storage.get('o_id'),
			pmob = storage.get('pmob'),
			comment = COMMENT_CONSULT;
		order.o_comment(o_id, pmob, comment);
		$('.btns_bottom').hide();
		hide_shade();
		module.waitNewOrder();
	});
	$('.btn_back').click(function() {
		$(this).parent().parent().hide();
		hide_shade();
	});
	$('#btnFailTake').click(function() {
		$('#btns_not_on').show();
		show_shade();
	});
	$('#btnFailTake2').click(function() {
		$('#btns_not_on2').show();
		show_shade();
	});
	$('#btnSucTake').click(function() {
		var o_id = storage.get('o_id'),
			pmob = storage.get('pmob'),
			comment = COMMENT_IN_CAR;
		order.o_comment(o_id, pmob, comment);
		setTimeout(module.waitNewOrder(), 2000);
	});
	$('#btn_cancle_taxi').click(function() {
		$('#btns_o_cancle').show();
		show_shade();
	});
	$('#history_lst').click(function() {
		window.location.href = fetchUrl("order/h5OrderListView.htm") + '&is_o_detail=1';
	});
	$('#btn_back_to_home').click(function() {
		if (getQueryString('is_o_detail') == null) {
			storage.set('current', 'waitNewOrder');
			window.location.reload();
		} else {
			history.back(-1);
		}
	});
});
var browser = {
	versions: function() {
		var u = navigator.userAgent,
			app = navigator.appVersion;
		return {
			trident: u.indexOf('Trident') > -1,
			presto: u.indexOf('Presto') > -1,
			webKit: u.indexOf('AppleWebKit') > -1,
			gecko: u.indexOf('Gecko') > -1 && u.indexOf('KHTML') == -1,
			mobile: !!u.match(/AppleWebKit.*Mobile.*/),
			ios: !!u.match(/\(i[^;]+;( U;)? CPU.+Mac OS X/),
			android: u.indexOf('Android') > -1 || u.indexOf('Linux') > -1,
			iPhone: u.indexOf('iPhone') > -1,
			iPad: u.indexOf('iPad') > -1,
			webApp: u.indexOf('Safari') == -1
		};
	}()
}
var WebController = {
	init: function(callback) {
		if (browser.versions.android) {
			console.log('### versions.android');
			if (null == window.webBinder || 'undefined' == window.webBinder) {
				JWebBinder == null
			}
			callback(JWebBinder);
		} else if (browser.versions.ios == true) {
			console.log('### versions.ios');
			connectWebViewJavascriptBridge(function(bridge) {
				bridge.init(function(message, responseCallback) {
					var data = {
						'Javascript Responds': 'Hello world!'
					}
					responseCallback(data)
				});
				if (typeof bridge.call == 'undefined') {
					bridge = null;
				}
				callback(bridge)
			})
		} else {
			console.log('### versions.unknow');
			callback(null);
		}
	}
}
var JWebBinder = {
	funMap: {},
	monitor: {},
	count: 0,
	onResponse: function(eventId, funId, result) {
		with(JWebBinder) {
			var callback = funMap[funId];
			var state = monitor[eventId];
			if (null == callback || null == state || 'stop' == state) {
				return;
			}
			if ('un' == state) {
				monitor[eventId] = 'stop';
			}
			var rep = '';
			eval('rep=' + result + ";");
			rep.eventId = eventId;
			callback(rep);
		}
	},
	defaultCallBack: function() {},
	toJson: function(target) {
		return JSON.stringify(target);
	},
	call: function(cmd, args, callback) {
		if (null == args) {
			args = JWebBinder.defaultCallBack;
		}
		if (typeof args == 'function') {
			callback = args;
			args = '';
		} else {
			args = JWebBinder.toJson(args);
		}
		if (null == callback) {
			callback = JWebBinder.defaultCallBack;
		}
		if (null == window.webBinder || 'undefined' == window.webBinder) {
			callback({
				code: 404,
				eventId: cmd
			});
			return;
		}
		with(JWebBinder) {
			monitor[cmd] = 'call';
			funMap[count] = callback;
			window.webBinder.dispatch(cmd, args, count + '');
			count++;
		}
	},
	on: function(cmd, args, callback) {
		if (null == args) {
			args = {
				'state': 'on'
			};
			callback = JWebBinder.defaultCallBack;
		}
		if (typeof args == 'function') {
			callback = args;
			args = JWebBinder.toJson({
				'state': 'on'
			});
		} else {
			args.state = 'on';
			args = JWebBinder.toJson(args);
		}
		if (null == callback) {
			callback = JWebBinder.defaultCallBack;
		}
		if (null == window.webBinder || 'undefined' == window.webBinder) {
			callback({
				code: 404,
				eventId: cmd
			});
			return;
		}
		with(JWebBinder) {
			monitor[cmd] = 'on';
			funMap[count] = callback;
			window.webBinder.dispatch(cmd, args, count + '');
			count++;
		}
	},
	un: function(cmd, args, callback) {
		if (null == args) {
			args = {
				'state': 'un'
			};
			callback = JWebBinder.defaultCallBack;
		}
		if (typeof args == 'function') {
			callback = args;
			args = JWebBinder.toJson({
				'state': 'un'
			});
		} else {
			args.state = 'un';
			args = JWebBinder.toJson(args);
		}
		if (null == callback) {
			callback = JWebBinder.defaultCallBack;
		}
		if (null == window.webBinder || 'undefined' == window.webBinder) {
			callback({
				code: 404,
				eventId: cmd
			});
			return;
		}
		with(JWebBinder) {
			monitor[cmd] = 'un';
			funMap[count] = callback;
			window.webBinder.dispatch(cmd, args, count + '');
			count++;
		}
	}
}

function connectWebViewJavascriptBridge(callback) {
	if (window.WebViewJavascriptBridge) {
		callback(WebViewJavascriptBridge)
	} else {
		document.addEventListener('WebViewJavascriptBridgeReady', function() {
			callback(WebViewJavascriptBridge)
		}, false)
	}
}
var WebBinder = null;
WebController.init(function(binder) {
	WebBinder = binder;
});